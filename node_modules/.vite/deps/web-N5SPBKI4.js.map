{
  "version": 3,
  "sources": ["../../@revenuecat/purchases-capacitor/src/web.ts"],
  "sourcesContent": ["/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { WebPlugin } from '@capacitor/core';\nimport type {\n  BILLING_FEATURE,\n  CustomerInfo,\n  CustomerInfoUpdateListener,\n  IN_APP_MESSAGE_TYPE,\n  IntroEligibility,\n  LOG_LEVEL,\n  LogHandler,\n  LogInResult,\n  MakePurchaseResult,\n  PurchasesConfiguration,\n  PurchasesEntitlementInfo,\n  PurchasesOffering,\n  PurchasesOfferings,\n  PurchasesPromotionalOffer,\n  PurchasesStoreProduct,\n  PurchasesStoreTransaction,\n  ShouldPurchasePromoProductListener,\n} from '@revenuecat/purchases-typescript-internal-esm';\nimport {\n  REFUND_REQUEST_STATUS,\n  VERIFICATION_RESULT,\n} from '@revenuecat/purchases-typescript-internal-esm';\n\nimport type {\n  GetProductOptions,\n  GetPromotionalOfferOptions,\n  PurchaseDiscountedPackageOptions,\n  PurchaseDiscountedProductOptions,\n  PurchasePackageOptions,\n  PurchasesPlugin,\n  PurchaseStoreProductOptions,\n  PurchaseSubscriptionOptionOptions,\n  SyncObserverModeAmazonPurchaseOptions,\n} from './definitions';\n\nexport class PurchasesWeb extends WebPlugin implements PurchasesPlugin {\n  private shouldMockWebResults = false;\n  private webNotSupportedErrorMessage = 'Web not supported in this plugin.';\n\n  configure(_configuration: PurchasesConfiguration): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('configure');\n  }\n\n  setMockWebResults(options: { shouldMockWebResults: boolean }): Promise<void> {\n    this.shouldMockWebResults = options.shouldMockWebResults;\n    return Promise.resolve();\n  }\n\n  setFinishTransactions(_finishTransactions: {\n    finishTransactions: boolean;\n  }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setFinishTransactions');\n  }\n  setSimulatesAskToBuyInSandbox(_simulatesAskToBuyInSandbox: {\n    simulatesAskToBuyInSandbox: boolean;\n  }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled(\n      'setSimulatesAskToBuyInSandbox',\n    );\n  }\n  addCustomerInfoUpdateListener(\n    _customerInfoUpdateListener: CustomerInfoUpdateListener,\n  ): Promise<string> {\n    return this.mockReturningFunctionIfEnabled(\n      'addCustomerInfoUpdateListener',\n      'mock-callback-id',\n    );\n  }\n  removeCustomerInfoUpdateListener(\n    _listenerToRemove: string,\n  ): Promise<{ wasRemoved: boolean }> {\n    return this.mockReturningFunctionIfEnabled(\n      'removeCustomerInfoUpdateListener',\n      { wasRemoved: false },\n    );\n  }\n  addShouldPurchasePromoProductListener(\n    _shouldPurchasePromoProductListener: ShouldPurchasePromoProductListener,\n  ): Promise<string> {\n    return this.mockReturningFunctionIfEnabled(\n      'addShouldPurchasePromoProductListener',\n      'mock-callback-id',\n    );\n  }\n  removeShouldPurchasePromoProductListener(\n    _listenerToRemove: string,\n  ): Promise<{ wasRemoved: boolean }> {\n    return this.mockReturningFunctionIfEnabled(\n      'removeShouldPurchasePromoProductListener',\n      { wasRemoved: false },\n    );\n  }\n  getOfferings(): Promise<PurchasesOfferings> {\n    const mockOfferings: PurchasesOfferings = {\n      all: {},\n      current: null,\n    };\n    return this.mockReturningFunctionIfEnabled('getOfferings', mockOfferings);\n  }\n  getCurrentOfferingForPlacement(_options: {\n    placementIdentifier: string;\n  }): Promise<PurchasesOffering | null> {\n    const mockOffering: PurchasesOffering | null = null;\n    return this.mockReturningFunctionIfEnabled(\n      'getCurrentOfferingForPlacement',\n      mockOffering,\n    );\n  }\n  syncAttributesAndOfferingsIfNeeded(): Promise<PurchasesOfferings> {\n    const mockOfferings: PurchasesOfferings = {\n      all: {},\n      current: null,\n    };\n    return this.mockReturningFunctionIfEnabled(\n      'syncAttributesAndOfferingsIfNeeded',\n      mockOfferings,\n    );\n  }\n  getProducts(\n    _options: GetProductOptions,\n  ): Promise<{ products: PurchasesStoreProduct[] }> {\n    const mockProducts = { products: [] };\n    return this.mockReturningFunctionIfEnabled('getProducts', mockProducts);\n  }\n  purchaseStoreProduct(\n    _options: PurchaseStoreProductOptions,\n  ): Promise<MakePurchaseResult> {\n    const mockPurchaseResult: MakePurchaseResult = {\n      productIdentifier: _options.product.identifier,\n      customerInfo: this.mockEmptyCustomerInfo,\n      transaction: this.mockTransaction(_options.product.identifier),\n    };\n    return this.mockReturningFunctionIfEnabled(\n      'purchaseStoreProduct',\n      mockPurchaseResult,\n    );\n  }\n  purchaseDiscountedProduct(\n    _options: PurchaseDiscountedProductOptions,\n  ): Promise<MakePurchaseResult> {\n    const mockPurchaseResult: MakePurchaseResult = {\n      productIdentifier: _options.product.identifier,\n      customerInfo: this.mockEmptyCustomerInfo,\n      transaction: this.mockTransaction(_options.product.identifier),\n    };\n    return this.mockReturningFunctionIfEnabled(\n      'purchaseDiscountedProduct',\n      mockPurchaseResult,\n    );\n  }\n  purchasePackage(\n    _options: PurchasePackageOptions,\n  ): Promise<MakePurchaseResult> {\n    const mockPurchaseResult: MakePurchaseResult = {\n      productIdentifier: _options.aPackage.product.identifier,\n      customerInfo: this.mockEmptyCustomerInfo,\n      transaction: this.mockTransaction(_options.aPackage.product.identifier),\n    };\n    return this.mockReturningFunctionIfEnabled(\n      'purchasePackage',\n      mockPurchaseResult,\n    );\n  }\n  purchaseSubscriptionOption(\n    _options: PurchaseSubscriptionOptionOptions,\n  ): Promise<MakePurchaseResult> {\n    const mockPurchaseResult: MakePurchaseResult = {\n      productIdentifier: _options.subscriptionOption.productId,\n      customerInfo: this.mockEmptyCustomerInfo,\n      transaction: this.mockTransaction(_options.subscriptionOption.productId),\n    };\n    return this.mockReturningFunctionIfEnabled(\n      'purchaseSubscriptionOption',\n      mockPurchaseResult,\n    );\n  }\n  purchaseDiscountedPackage(\n    _options: PurchaseDiscountedPackageOptions,\n  ): Promise<MakePurchaseResult> {\n    const mockPurchaseResult: MakePurchaseResult = {\n      productIdentifier: _options.aPackage.product.identifier,\n      customerInfo: this.mockEmptyCustomerInfo,\n      transaction: this.mockTransaction(_options.aPackage.product.identifier),\n    };\n    return this.mockReturningFunctionIfEnabled(\n      'purchaseDiscountedPackage',\n      mockPurchaseResult,\n    );\n  }\n  restorePurchases(): Promise<{ customerInfo: CustomerInfo }> {\n    const mockResponse = { customerInfo: this.mockEmptyCustomerInfo };\n    return this.mockReturningFunctionIfEnabled(\n      'restorePurchases',\n      mockResponse,\n    );\n  }\n  getAppUserID(): Promise<{ appUserID: string }> {\n    return this.mockReturningFunctionIfEnabled('getAppUserID', {\n      appUserID: 'test-web-user-id',\n    });\n  }\n  logIn(_appUserID: { appUserID: string }): Promise<LogInResult> {\n    const mockLogInResult: LogInResult = {\n      customerInfo: this.mockEmptyCustomerInfo,\n      created: false,\n    };\n    return this.mockReturningFunctionIfEnabled('logIn', mockLogInResult);\n  }\n  logOut(): Promise<{ customerInfo: CustomerInfo }> {\n    const mockResponse = { customerInfo: this.mockEmptyCustomerInfo };\n    return this.mockReturningFunctionIfEnabled('logOut', mockResponse);\n  }\n  setLogLevel(_level: { level: LOG_LEVEL }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setLogLevel');\n  }\n  setLogHandler(_logHandler: LogHandler): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setLogHandler');\n  }\n  getCustomerInfo(): Promise<{ customerInfo: CustomerInfo }> {\n    const mockResponse = { customerInfo: this.mockEmptyCustomerInfo };\n    return this.mockReturningFunctionIfEnabled('getCustomerInfo', mockResponse);\n  }\n  syncPurchases(): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('syncPurchases');\n  }\n  syncObserverModeAmazonPurchase(\n    _options: SyncObserverModeAmazonPurchaseOptions,\n  ): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled(\n      'syncObserverModeAmazonPurchase',\n    );\n  }\n  enableAdServicesAttributionTokenCollection(): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled(\n      'enableAdServicesAttributionTokenCollection',\n    );\n  }\n  isAnonymous(): Promise<{ isAnonymous: boolean }> {\n    const mockResponse = { isAnonymous: false };\n    return this.mockReturningFunctionIfEnabled('isAnonymous', mockResponse);\n  }\n  checkTrialOrIntroductoryPriceEligibility(_productIdentifiers: {\n    productIdentifiers: string[];\n  }): Promise<{ [productId: string]: IntroEligibility }> {\n    return this.mockReturningFunctionIfEnabled(\n      'checkTrialOrIntroductoryPriceEligibility',\n      {},\n    );\n  }\n  getPromotionalOffer(\n    _options: GetPromotionalOfferOptions,\n  ): Promise<PurchasesPromotionalOffer | undefined> {\n    return this.mockReturningFunctionIfEnabled(\n      'getPromotionalOffer',\n      undefined,\n    );\n  }\n  invalidateCustomerInfoCache(): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled(\n      'invalidateCustomerInfoCache',\n    );\n  }\n  presentCodeRedemptionSheet(): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('presentCodeRedemptionSheet');\n  }\n  setAttributes(_attributes: { [key: string]: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setAttributes');\n  }\n  setEmail(_email: { email: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setEmail');\n  }\n  setPhoneNumber(_phoneNumber: { phoneNumber: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setPhoneNumber');\n  }\n  setDisplayName(_displayName: { displayName: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setDisplayName');\n  }\n  setPushToken(_pushToken: { pushToken: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setPushToken');\n  }\n  setProxyURL(_url: { url: string }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setProxyURL');\n  }\n  collectDeviceIdentifiers(): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('collectDeviceIdentifiers');\n  }\n  setAdjustID(_adjustID: { adjustID: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setAdjustID');\n  }\n  setAppsflyerID(_appsflyerID: { appsflyerID: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setAppsflyerID');\n  }\n  setFBAnonymousID(_fbAnonymousID: {\n    fbAnonymousID: string | null;\n  }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setFBAnonymousID');\n  }\n  setMparticleID(_mparticleID: { mparticleID: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setMparticleID');\n  }\n  setCleverTapID(_cleverTapID: { cleverTapID: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setCleverTapID');\n  }\n  setMixpanelDistinctID(_mixpanelDistinctID: {\n    mixpanelDistinctID: string | null;\n  }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setMixpanelDistinctID');\n  }\n  setFirebaseAppInstanceID(_firebaseAppInstanceID: {\n    firebaseAppInstanceID: string | null;\n  }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setFirebaseAppInstanceID');\n  }\n  setOnesignalID(_onesignalID: { onesignalID: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setOnesignalID');\n  }\n  setOnesignalUserID(_onesignalUserID: {\n    onesignalUserID: string | null;\n  }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setOnesignalUserID');\n  }\n  setAirshipChannelID(_airshipChannelID: {\n    airshipChannelID: string | null;\n  }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setAirshipChannelID');\n  }\n  setMediaSource(_mediaSource: { mediaSource: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setMediaSource');\n  }\n  setCampaign(_campaign: { campaign: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setCampaign');\n  }\n  setAdGroup(_adGroup: { adGroup: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setAdGroup');\n  }\n  setAd(_ad: { ad: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setAd');\n  }\n  setKeyword(_keyword: { keyword: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setKeyword');\n  }\n  setCreative(_creative: { creative: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setCreative');\n  }\n  canMakePayments(_features?: {\n    features?: BILLING_FEATURE[];\n  }): Promise<{ canMakePayments: boolean }> {\n    return this.mockReturningFunctionIfEnabled('canMakePayments', {\n      canMakePayments: true,\n    });\n  }\n  beginRefundRequestForActiveEntitlement(): Promise<{\n    refundRequestStatus: REFUND_REQUEST_STATUS;\n  }> {\n    const mockResult = {\n      refundRequestStatus: REFUND_REQUEST_STATUS.USER_CANCELLED,\n    };\n    return this.mockReturningFunctionIfEnabled(\n      'beginRefundRequestForActiveEntitlement',\n      mockResult,\n    );\n  }\n  beginRefundRequestForEntitlement(_entitlementInfo: {\n    entitlementInfo: PurchasesEntitlementInfo;\n  }): Promise<{ refundRequestStatus: REFUND_REQUEST_STATUS }> {\n    const mockResult = {\n      refundRequestStatus: REFUND_REQUEST_STATUS.USER_CANCELLED,\n    };\n    return this.mockReturningFunctionIfEnabled(\n      'beginRefundRequestForEntitlement',\n      mockResult,\n    );\n  }\n  beginRefundRequestForProduct(_storeProduct: {\n    storeProduct: PurchasesStoreProduct;\n  }): Promise<{ refundRequestStatus: REFUND_REQUEST_STATUS }> {\n    const mockResult = {\n      refundRequestStatus: REFUND_REQUEST_STATUS.USER_CANCELLED,\n    };\n    return this.mockReturningFunctionIfEnabled(\n      'beginRefundRequestForProduct',\n      mockResult,\n    );\n  }\n\n  showInAppMessages(_options?: {\n    messageTypes?: IN_APP_MESSAGE_TYPE[];\n  }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('showInAppMessages');\n  }\n\n  isConfigured(): Promise<{ isConfigured: boolean }> {\n    const mockResult = { isConfigured: true };\n    return this.mockReturningFunctionIfEnabled('isConfigured', mockResult);\n  }\n\n  // Mock helpers\n\n  private mockEmptyCustomerInfo: CustomerInfo = {\n    entitlements: {\n      all: {},\n      active: {},\n      verification: VERIFICATION_RESULT.NOT_REQUESTED,\n    },\n    activeSubscriptions: [],\n    allPurchasedProductIdentifiers: [],\n    latestExpirationDate: null,\n    firstSeen: '2023-08-31T15:11:21.445Z',\n    originalAppUserId: 'mock-web-user-id',\n    requestDate: '2023-08-31T15:11:21.445Z',\n    allExpirationDates: {},\n    allPurchaseDates: {},\n    originalApplicationVersion: null,\n    originalPurchaseDate: null,\n    managementURL: null,\n    nonSubscriptionTransactions: [],\n  };\n\n  private mockTransaction(\n    productIdentifier: string,\n  ): PurchasesStoreTransaction {\n    return {\n      productIdentifier: productIdentifier,\n      purchaseDate: new Date().toISOString(),\n      transactionIdentifier: '',\n    };\n  }\n\n  private mockNonReturningFunctionIfEnabled(\n    functionName: string,\n  ): Promise<void> {\n    if (!this.shouldMockWebResults) {\n      return Promise.reject(this.webNotSupportedErrorMessage);\n    }\n    console.log(`${functionName} called on web with mocking enabled. No-op`);\n    return Promise.resolve();\n  }\n\n  private mockReturningFunctionIfEnabled<T>(\n    functionName: string,\n    returnValue: T,\n  ): Promise<T> {\n    if (!this.shouldMockWebResults) {\n      return Promise.reject(this.webNotSupportedErrorMessage);\n    }\n    console.log(\n      `${functionName} called on web with mocking enabled. Returning mocked value`,\n    );\n    return Promise.resolve(returnValue);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
