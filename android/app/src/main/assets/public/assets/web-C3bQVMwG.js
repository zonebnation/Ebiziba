import{W as n}from"./index-CGXY-R5d.js";import{VERIFICATION_RESULT as e,REFUND_REQUEST_STATUS as t}from"./index-B-NisLHt.js";import"./framer--EiQgGdQ.js";import"./vendor-fbM9bkeS.js";import"./utils-DiRS1ToC.js";import"./supabase-DkUcngs9.js";import"./ui-Yji1MIDK.js";class r extends n{constructor(){super(...arguments),this.shouldMockWebResults=!1,this.webNotSupportedErrorMessage="Web not supported in this plugin.",this.mockEmptyCustomerInfo={entitlements:{all:{},active:{},verification:e.NOT_REQUESTED},activeSubscriptions:[],allPurchasedProductIdentifiers:[],latestExpirationDate:null,firstSeen:"2023-08-31T15:11:21.445Z",originalAppUserId:"mock-web-user-id",requestDate:"2023-08-31T15:11:21.445Z",allExpirationDates:{},allPurchaseDates:{},originalApplicationVersion:null,originalPurchaseDate:null,managementURL:null,nonSubscriptionTransactions:[]}}configure(n){return this.mockNonReturningFunctionIfEnabled("configure")}setMockWebResults(n){return this.shouldMockWebResults=n.shouldMockWebResults,Promise.resolve()}setFinishTransactions(n){return this.mockNonReturningFunctionIfEnabled("setFinishTransactions")}setSimulatesAskToBuyInSandbox(n){return this.mockNonReturningFunctionIfEnabled("setSimulatesAskToBuyInSandbox")}addCustomerInfoUpdateListener(n){return this.mockReturningFunctionIfEnabled("addCustomerInfoUpdateListener","mock-callback-id")}removeCustomerInfoUpdateListener(n){return this.mockReturningFunctionIfEnabled("removeCustomerInfoUpdateListener",{wasRemoved:!1})}addShouldPurchasePromoProductListener(n){return this.mockReturningFunctionIfEnabled("addShouldPurchasePromoProductListener","mock-callback-id")}removeShouldPurchasePromoProductListener(n){return this.mockReturningFunctionIfEnabled("removeShouldPurchasePromoProductListener",{wasRemoved:!1})}getOfferings(){return this.mockReturningFunctionIfEnabled("getOfferings",{all:{},current:null})}getCurrentOfferingForPlacement(n){return this.mockReturningFunctionIfEnabled("getCurrentOfferingForPlacement",null)}syncAttributesAndOfferingsIfNeeded(){return this.mockReturningFunctionIfEnabled("syncAttributesAndOfferingsIfNeeded",{all:{},current:null})}getProducts(n){return this.mockReturningFunctionIfEnabled("getProducts",{products:[]})}purchaseStoreProduct(n){const e={productIdentifier:n.product.identifier,customerInfo:this.mockEmptyCustomerInfo,transaction:this.mockTransaction(n.product.identifier)};return this.mockReturningFunctionIfEnabled("purchaseStoreProduct",e)}purchaseDiscountedProduct(n){const e={productIdentifier:n.product.identifier,customerInfo:this.mockEmptyCustomerInfo,transaction:this.mockTransaction(n.product.identifier)};return this.mockReturningFunctionIfEnabled("purchaseDiscountedProduct",e)}purchasePackage(n){const e={productIdentifier:n.aPackage.product.identifier,customerInfo:this.mockEmptyCustomerInfo,transaction:this.mockTransaction(n.aPackage.product.identifier)};return this.mockReturningFunctionIfEnabled("purchasePackage",e)}purchaseSubscriptionOption(n){const e={productIdentifier:n.subscriptionOption.productId,customerInfo:this.mockEmptyCustomerInfo,transaction:this.mockTransaction(n.subscriptionOption.productId)};return this.mockReturningFunctionIfEnabled("purchaseSubscriptionOption",e)}purchaseDiscountedPackage(n){const e={productIdentifier:n.aPackage.product.identifier,customerInfo:this.mockEmptyCustomerInfo,transaction:this.mockTransaction(n.aPackage.product.identifier)};return this.mockReturningFunctionIfEnabled("purchaseDiscountedPackage",e)}restorePurchases(){const n={customerInfo:this.mockEmptyCustomerInfo};return this.mockReturningFunctionIfEnabled("restorePurchases",n)}getAppUserID(){return this.mockReturningFunctionIfEnabled("getAppUserID",{appUserID:"test-web-user-id"})}logIn(n){const e={customerInfo:this.mockEmptyCustomerInfo,created:!1};return this.mockReturningFunctionIfEnabled("logIn",e)}logOut(){const n={customerInfo:this.mockEmptyCustomerInfo};return this.mockReturningFunctionIfEnabled("logOut",n)}setLogLevel(n){return this.mockNonReturningFunctionIfEnabled("setLogLevel")}setLogHandler(n){return this.mockNonReturningFunctionIfEnabled("setLogHandler")}getCustomerInfo(){const n={customerInfo:this.mockEmptyCustomerInfo};return this.mockReturningFunctionIfEnabled("getCustomerInfo",n)}syncPurchases(){return this.mockNonReturningFunctionIfEnabled("syncPurchases")}syncObserverModeAmazonPurchase(n){return this.mockNonReturningFunctionIfEnabled("syncObserverModeAmazonPurchase")}enableAdServicesAttributionTokenCollection(){return this.mockNonReturningFunctionIfEnabled("enableAdServicesAttributionTokenCollection")}isAnonymous(){return this.mockReturningFunctionIfEnabled("isAnonymous",{isAnonymous:!1})}checkTrialOrIntroductoryPriceEligibility(n){return this.mockReturningFunctionIfEnabled("checkTrialOrIntroductoryPriceEligibility",{})}getPromotionalOffer(n){return this.mockReturningFunctionIfEnabled("getPromotionalOffer",void 0)}invalidateCustomerInfoCache(){return this.mockNonReturningFunctionIfEnabled("invalidateCustomerInfoCache")}presentCodeRedemptionSheet(){return this.mockNonReturningFunctionIfEnabled("presentCodeRedemptionSheet")}setAttributes(n){return this.mockNonReturningFunctionIfEnabled("setAttributes")}setEmail(n){return this.mockNonReturningFunctionIfEnabled("setEmail")}setPhoneNumber(n){return this.mockNonReturningFunctionIfEnabled("setPhoneNumber")}setDisplayName(n){return this.mockNonReturningFunctionIfEnabled("setDisplayName")}setPushToken(n){return this.mockNonReturningFunctionIfEnabled("setPushToken")}setProxyURL(n){return this.mockNonReturningFunctionIfEnabled("setProxyURL")}collectDeviceIdentifiers(){return this.mockNonReturningFunctionIfEnabled("collectDeviceIdentifiers")}setAdjustID(n){return this.mockNonReturningFunctionIfEnabled("setAdjustID")}setAppsflyerID(n){return this.mockNonReturningFunctionIfEnabled("setAppsflyerID")}setFBAnonymousID(n){return this.mockNonReturningFunctionIfEnabled("setFBAnonymousID")}setMparticleID(n){return this.mockNonReturningFunctionIfEnabled("setMparticleID")}setCleverTapID(n){return this.mockNonReturningFunctionIfEnabled("setCleverTapID")}setMixpanelDistinctID(n){return this.mockNonReturningFunctionIfEnabled("setMixpanelDistinctID")}setFirebaseAppInstanceID(n){return this.mockNonReturningFunctionIfEnabled("setFirebaseAppInstanceID")}setOnesignalID(n){return this.mockNonReturningFunctionIfEnabled("setOnesignalID")}setOnesignalUserID(n){return this.mockNonReturningFunctionIfEnabled("setOnesignalUserID")}setAirshipChannelID(n){return this.mockNonReturningFunctionIfEnabled("setAirshipChannelID")}setMediaSource(n){return this.mockNonReturningFunctionIfEnabled("setMediaSource")}setCampaign(n){return this.mockNonReturningFunctionIfEnabled("setCampaign")}setAdGroup(n){return this.mockNonReturningFunctionIfEnabled("setAdGroup")}setAd(n){return this.mockNonReturningFunctionIfEnabled("setAd")}setKeyword(n){return this.mockNonReturningFunctionIfEnabled("setKeyword")}setCreative(n){return this.mockNonReturningFunctionIfEnabled("setCreative")}canMakePayments(n){return this.mockReturningFunctionIfEnabled("canMakePayments",{canMakePayments:!0})}beginRefundRequestForActiveEntitlement(){const n={refundRequestStatus:t.USER_CANCELLED};return this.mockReturningFunctionIfEnabled("beginRefundRequestForActiveEntitlement",n)}beginRefundRequestForEntitlement(n){const e={refundRequestStatus:t.USER_CANCELLED};return this.mockReturningFunctionIfEnabled("beginRefundRequestForEntitlement",e)}beginRefundRequestForProduct(n){const e={refundRequestStatus:t.USER_CANCELLED};return this.mockReturningFunctionIfEnabled("beginRefundRequestForProduct",e)}showInAppMessages(n){return this.mockNonReturningFunctionIfEnabled("showInAppMessages")}isConfigured(){return this.mockReturningFunctionIfEnabled("isConfigured",{isConfigured:!0})}mockTransaction(n){return{productIdentifier:n,purchaseDate:(new Date).toISOString(),transactionIdentifier:""}}mockNonReturningFunctionIfEnabled(n){return this.shouldMockWebResults?(console.log(`${n} called on web with mocking enabled. No-op`),Promise.resolve()):Promise.reject(this.webNotSupportedErrorMessage)}mockReturningFunctionIfEnabled(n,e){return this.shouldMockWebResults?(console.log(`${n} called on web with mocking enabled. Returning mocked value`),Promise.resolve(e)):Promise.reject(this.webNotSupportedErrorMessage)}}export{r as PurchasesWeb};
